"These are my preferences for my vim files.

"This positions the window in the top-left corner of the screen
"winpos 0 0

"Set the default window size:
"set lines=32 columns=80

"Line Numbers
set nu

"Don't wrap text.
set wrap!

"Set a nice Font
set guifont=Bitstream\ Vera\ Sans\ Mono:h10

"Good tabs
set autoindent
set shiftwidth=2
set softtabstop=2
set expandtab

"Mappings
noremap <space> <PageDown>
noremap <BS> <PageUp>

"Y by default is incongruous with C and D, in that it yanks a complete
"line (duplicating yy) rather than yanking to the end of the line.
"This fixes that:
noremap Y y$

"Macros for stuff
:ab #b /************************************************
:ab #e ************************************************/
:ab #i #include
:ab #l /*----------------------------------------------*/

"Increase history
set history=500

"Set the directory where all the VIM backup files are stored:
set backupdir=~/vimBackupFiles

"Let %% expand to the current path. E.g. :e %%\    (expands)
cabbr <expr> %% expand('%:p:h')

"END MY PREFERENCES


set guifont=Menlo\ Regular:h11

set background=dark



"source $VIMRUNTIME/vimrc_example.vim


"BEGIN vimrc_example.vim COPY
" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup    " do not keep a backup file, use versions instead
else
  set backup    " keep a backup file
endif
set ruler   " show the cursor position all the time
set showcmd   " display incomplete commands
set incsearch   " do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" CTRL-U in insert mode deletes a lot.  Use CTRL-G u to first break undo,
" so that you can undo CTRL-U after inserting a line break.
inoremap <C-U> <C-G>u<C-U>

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  "set mouse=a
  "set mouse=n " SW: This is better that 'a', but none is even better!
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  " Also don't do it when the mark is in the first line, that is the default
  " position when opening a file.
  "autocmd BufReadPost *
  "  \ if line("'\"") > 1 && line("'\"") <= line("$") |
  "  \   exe "normal! g`\"" |
  "  \ endif

  augroup END

else

  set autoindent    " always set autoindenting on

endif " has("autocmd")

" Convenient command to see the difference between the current buffer and the
" file it was loaded from, thus the changes you made.
" Only define it when not defined already.
if !exists(":DiffOrig")
  command DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis
      \ | wincmd p | diffthis
endif
"END vimrc_example.vim COPY



set nocompatible
"source $VIMRUNTIME/mswin.vim
"behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  if &sh =~ '\<cmd'
    silent execute '!""C:\Program Files\Vim\vim63\diff" ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . '"'
  else
    silent execute '!C:\Program" Files\Vim\vim63\diff" ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  endif
endfunction

" Some more preferences, cause for some reason, they only work down here!
"Make h & l keystrokes to wrap over lines
set whichwrap=h,l,~,[,],<,>

" This needs to be at the end of the file, so it's not re-overridden:
set paste " Disable auto indenting. Annoying when pasting. Although may want to change this back!

" Colorschemes are downloaded to: ~/.vim/colors
" colorscheme PerfectDark
